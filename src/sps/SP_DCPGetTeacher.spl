CREATE OR REPLACE FUNCTION $DB_NAME$Views.SP_DCPGetTeacher(
    pTeacherUserId INTEGER
)
RETURNS TABLE (
	TeacherUserId INTEGER, ClassInfo JSONB, FirstName VARCHAR(100), LastName VARCHAR(100), DefaultSignatureScanFile BYTEA, 
	PhoneNumber VARCHAR(25), EmailAddress VARCHAR(250), ReputationValue INTEGER
) AS $$
BEGIN
    RETURN QUERY
	SELECT t.TeacherUserId, utc.ClassInfo, t.Firstname, t.Lastname, t.DefaultSignatureScanFile, t.PhoneNumber, t.EmailAddress, t.ReputationValue
	FROM $DB_NAME$Views.Teachers t
	LEFT JOIN (
		SELECT 
			utc.TeacherUserId,
			JSONB_AGG(
				( -- Create rows
					SELECT myrow 
					FROM (SELECT utc.ClassId, c.ClassDisplayName) myrow
				)
				ORDER BY c.ClassDisplayName
			) AS ClassInfo
		FROM $DB_NAME$Views.User_Teacher_Class utc
		INNER JOIN $DB_NAME$Views.Class c ON utc.ClassId = c.ClassId
		GROUP BY utc.TeacherUserId
	) utc ON t.TeacherUserId = utc.TeacherUserId
	WHERE (t.TeacherUserId = pTeacherUserId OR pTeacherUserId IS NULL)
	;	
END;
$$ LANGUAGE 'plpgsql';