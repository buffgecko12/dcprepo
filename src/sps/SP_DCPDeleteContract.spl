CREATE OR REPLACE FUNCTION $APP_NAME$Views.SP_DCPDeleteContract (
    pContractId INTEGER,
    pSendNotificationsFlag BOOLEAN
) 
RETURNS VOID AS $$
DECLARE 
	MyGoal RECORD;
	ContractIdList INTEGER[];
	MyContractId INTEGER;
BEGIN

	-- Get contracts to delete
	SELECT ARRAY_AGG(ContractId) INTO ContractIdList
	FROM $APP_NAME$Views.Contract
	WHERE (ContractId = pContractId OR pContractId IS NULL)
	AND (ContractStatus IN('D','P') OR ContractStatus IS NULL)
	;
	
	-- Send notifications (must be done first, since we are deleting contract rows)
	IF(pSendNotificationsFlag) THEN
		FOREACH MyContractId IN ARRAY ContractIdList
		LOOP
			PERFORM $APP_NAME$Views.SP_DCPUpsertUserNotification(NULL, 1103, MyContractId);
		END LOOP;
	END IF;

	-- Delete contract evaluation info
	DELETE FROM $APP_NAME$.Contract_Goal_Reward WHERE ContractId = ANY(ContractIdList);
	DELETE FROM $APP_NAME$.Contract_Party_Evaluation WHERE ContractId = ANY(ContractIdList);
	DELETE FROM $APP_NAME$.Contract_Party_Goal_Evaluation WHERE ContractId = ANY(ContractIdList);
	
	-- Delete contract goals
	FOR MyGoal IN
		SELECT cg.ContractId, cg.GoalId
		FROM $APP_NAME$.Contract_Goal cg
		WHERE cg.ContractId = ANY(ContractIdList)
	LOOP
	    PERFORM $APP_NAME$Views.SP_DCPDeleteContractGoal(MyGoal.ContractId, MyGoal.GoalId);
	END LOOP;

	DELETE FROM $APP_NAME$.Contract_Party_Approval cpa WHERE cpa.ContractId = ANY(ContractIdList); -- party approvals
	DELETE FROM $APP_NAME$.Contract_Party cp WHERE cp.ContractId = ANY(ContractIdList); -- parties
	DELETE FROM $APP_NAME$.Contract	WHERE ContractId = ANY(ContractIdList); -- contract
	
END;
$$ LANGUAGE 'plpgsql';