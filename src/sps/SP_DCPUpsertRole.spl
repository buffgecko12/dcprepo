CREATE OR REPLACE FUNCTION $APP_NAME$Views.SP_DCPUpsertRole (
	pRoleId INTEGER,
	pRoleClass CHAR(2),
	pName VARCHAR(100),
	pDescription VARCHAR(500),
	pPublicFlag BOOLEAN,
	pSchoolList INTEGER[],
	pUserTypeList CHAR(2)[],
	pUserList INTEGER[],
	pInternalFlag BOOLEAN
) 
RETURNS INTEGER AS $$
DECLARE 
	MyRoleId INTEGER; -- Return new RoleId (if created)
BEGIN   

	MyRoleId = pRoleId;

	-- New role (check no existing Roleid or RoleName)
	IF NOT EXISTS (SELECT 1 FROM $APP_NAME$.Role WHERE (Name = pName OR RoleId = pRoleId)) THEN 
	
		-- Get next id value (if needed)
		IF(pRoleId IS NULL) THEN
		    SELECT * FROM $APP_NAME$Views.SP_DCPGetNextId('role') INTO MyRoleId;
	    END IF;
	    
	    -- Add new role
	    INSERT INTO $APP_NAME$.Role(RoleId, RoleClass, Name, Description, PublicFlag, SchoolList, UserTypeList, UserList, InternalFlag)
	    VALUES(MyRoleId, pRoleClass, pName, pDescription, pPublicFlag, pSchoolList, pUserTypeList, pUserList, pInternalFlag)
	    ON CONFLICT(RoleId) DO NOTHING
	    ;   
	    
	ELSE
	
	    -- Update existing
	    UPDATE $APP_NAME$.Role
	    SET RoleClass = pRoleClass,
	    	Name = pName,
	    	Description = pDescription, 
	    	PublicFlag = pPublicFlag,
	    	SchoolList = pSchoolList,
	    	UserTypeList = pUserTypeList,
	    	UserList = pUserList,
	    	InternalFlag = pInternalFlag
	    WHERE RoleId = MyRoleId
	    ;
	END IF;
    
	-- Return new id (if new role)
    RETURN MyRoleId;
END;
$$ LANGUAGE 'plpgsql';