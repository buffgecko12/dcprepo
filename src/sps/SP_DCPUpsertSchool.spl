CREATE OR REPLACE FUNCTION $APP_NAME$Views.SP_DCPUpsertSchool (
	pSchoolId INTEGER,
	pSchoolDisplayName VARCHAR(100),
	pSchoolAbbreviation VARCHAR(20),
	pAddress VARCHAR(100),
	pCity VARCHAR(100),
	pDepartment VARCHAR(100),
	pDataUsePolicyFileId INTEGER,
	pGuardianApprovalPolicy JSONB
) 
RETURNS INTEGER AS $$
DECLARE 
	MySchoolId INTEGER; -- Return new school id (if created)
BEGIN   

	-- Get next id value (for new school only)
	IF(pSchoolId IS NULL) THEN
	    SELECT * FROM $APP_NAME$Views.SP_DCPGetNextId('school') INTO MySchoolId;
    ELSE
    	MySchoolId = pSchoolId;
    END IF;
    
    -- Upsert school
    INSERT INTO $APP_NAME$.School(SchoolId, SchoolDisplayName, SchoolAbbreviation, Address, City, Department, DataUsePolicyFileId, GuardianApprovalPolicy)
    VALUES(MySchoolId, pSchoolDisplayName, pSchoolAbbreviation, pAddress, pCity, pDepartment, pDataUsePolicyFileId, pGuardianApprovalPolicy)
    ON CONFLICT(SchoolId) DO UPDATE SET
	    SchoolDisplayName = EXCLUDED.SchoolDisplayName,
	    SchoolAbbreviation = EXCLUDED.SchoolAbbreviation,
	    Address = EXCLUDED.Address,
	    City = EXCLUDED.City,
        Department = EXCLUDED.Department,
        DataUsePolicyFileId = EXCLUDED.DataUsePolicyFileId,
        GuardianApprovalPolicy = EXCLUDED.GuardianApprovalPolicy
    ;   
    
	-- Return new id (if new school)
    RETURN MySchoolId;   
END;
$$ LANGUAGE 'plpgsql';