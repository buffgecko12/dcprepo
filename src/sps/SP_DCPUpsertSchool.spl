CREATE OR REPLACE FUNCTION $APP_NAME$Views.SP_DCPUpsertSchool (
	pSchoolId INTEGER,
	pSchoolAbbreviation VARCHAR(20),
	pSchoolDisplayName VARCHAR(100),
	pAddress VARCHAR(100),
	pCity VARCHAR(100),
	pDepartment VARCHAR(100)
) 
RETURNS INTEGER AS $$
DECLARE 
	MySchoolId INTEGER; -- Return new school id (if created)
BEGIN   

	-- Get next id value (for new school only)
	IF(pSchoolId IS NULL) THEN
	    SELECT * FROM $APP_NAME$Views.SP_DCPGetNextId('school') INTO MySchoolId;
	    
	    -- Create default roles
		PERFORM $APP_NAME$Views.SP_DCPUpsertRole(
			NULL, pSchoolAbbreviation || ' - Docentes', 'Todos los docentes del colegio ' || pSchoolDisplayName, FALSE, CAST('{' || MySchoolId || '}' AS INTEGER[]), '{TR}', NULL
		);
		PERFORM $APP_NAME$Views.SP_DCPUpsertRole(
			NULL, pSchoolAbbreviation || ' - General', 'Todos los integrantes del colegio ' || pSchoolDisplayName, FALSE, CAST('{' || MySchoolId || '}' AS INTEGER[]), NULL, NULL
		);
		PERFORM $APP_NAME$Views.SP_DCPUpsertRole(
			NULL, pSchoolAbbreviation || ' - Administraci' || U&'\00F3' || 'n', 'La administracion del colegio ' || pSchoolDisplayName, FALSE, CAST('{' || MySchoolId || '}' AS INTEGER[]), '{SF}', NULL
		);
	    
    ELSE
    	-- Existing school
    	MySchoolId = pSchoolId;
    	
	    -- Close current row
	    UPDATE $APP_NAME$.School
	    SET EndTS = CURRENT_TIMESTAMP
	    WHERE SchoolId = pSchoolId
	    AND EndTS = TIMESTAMP '9999-12-31 23:59:59'
	    ;
    	
    END IF;
    
	-- Add new row
    INSERT INTO $APP_NAME$.School(SchoolId, SchoolAbbreviation, SchoolDisplayName, Address, City, Department, StartTS, EndTS)
    SELECT MySchoolId, pSchoolAbbreviation, pSchoolDisplayName, pAddress, pCity, pDepartment, CURRENT_TIMESTAMP, TIMESTAMP '9999-12-31 23:59:59'
    ;   
    
	-- Return new id (if new school)
    RETURN MySchoolId;   
END;
$$ LANGUAGE 'plpgsql';