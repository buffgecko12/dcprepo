CREATE OR REPLACE FUNCTION $APP_NAME$Views.SP_DCPUpsertUser (
    pUserId INTEGER, 
    pSchoolId INTEGER, 
    pUserName VARCHAR(50), 
    pUserType CHAR(2), 
    pFirstName VARCHAR(100), 
    pLastName VARCHAR(100), 
    pEmailAddress VARCHAR(250),
    pPassword VARCHAR(128),
    pProfilePictureId INTEGER,
    pLast_Login TIMESTAMPTZ
) 
RETURNS INTEGER AS $$
DECLARE 
	MyUserId INTEGER; -- Track how many new users were created
BEGIN   

	-- Get userid
	IF(pUserId IS NULL) THEN
		-- Create user (get next userid)
	    SELECT * FROM $APP_NAME$Views.SP_DCPGetNextId('user') INTO MyUserId;
    ELSE
    	-- Update user (use provided userid)
    	MyUserId = pUserId;
    END IF;
    
    -- Upsert user
    INSERT INTO $APP_NAME$.Users(UserId, SchoolId, UserName, UserType, FirstName, LastName, EmailAddress, Password, ProfilePictureId, Last_Login, Is_Active)
    VALUES(MyUserId, pSchoolId, pUserName, pUserType, pFirstName, pLastName, pEmailAddress, pPassword, pProfilePictureId, pLast_Login, TRUE)
    ON CONFLICT(UserId) DO UPDATE SET
	    FirstName = COALESCE(NULLIF(EXCLUDED.FirstName,''), Users.FirstName), -- NOT NULL field
	    LastName = COALESCE(NULLIF(EXCLUDED.LastName,''), Users.LastName),
        SchoolId = COALESCE(EXCLUDED.SchoolId, Users.SchoolId),
        UserName = COALESCE(NULLIF(EXCLUDED.UserName,''), Users.UserName),
        UserType = COALESCE(NULLIF(EXCLUDED.UserType,''), Users.UserType),
	    EmailAddress = NULLIF(EXCLUDED.EmailAddress,''),
	    Password = COALESCE(NULLIF(EXCLUDED.Password,''), Users.Password), -- Don't allow overwriting with NULL
	    ProfilePictureId = NULLIF(EXCLUDED.ProfilePictureId,0), -- Take 0 value from form and set to NULL
	    Last_Login = COALESCE(EXCLUDED.Last_Login, Users.Last_Login)
    ;   
    
    -- Add additional info (new user)
    IF(pUserId IS NULL) THEN 
    
    	-- Add default pictures
    	INSERT INTO $APP_NAME$.User_Profile_Picture(UserId, ProfilePictureId, ProfilePictureAddedTS)
    	SELECT MyUserId, ProfilePictureId, CURRENT_TIMESTAMP
    	FROM $APP_NAME$Views.Lookup_Profile_Picture
		WHERE BadgeLevel = 'D'
		;
    	
		-- Generate user event (new user)
		PERFORM $APP_NAME$Views.SP_DCPProcessUserEvent(MyUserId, 2001, NULL);
	END IF;
		
	-- Return userid
    RETURN MyUserId;   
END;
$$ LANGUAGE 'plpgsql';