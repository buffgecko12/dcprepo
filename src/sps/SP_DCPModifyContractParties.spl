CREATE OR REPLACE FUNCTION $APP_NAME$Views.SP_DCPModifyContractParties(
    pContractId INTEGER,
    pPartyUserInfo JSONB
)
RETURNS INTEGER AS $$
BEGIN
	
    -- Delete old parties (if applicable)
    IF(pPartyUserInfo->'deletedparties') IS NOT NULL THEN
        DELETE FROM $APP_NAME$.Contract_Party
        WHERE ContractId = pContractId
        AND PartyUserId IN (
            SELECT CAST(
                JSONB_ARRAY_ELEMENTS_TEXT(pPartyUserInfo->'deletedparties') AS INTEGER
            )
        )
        ;
    END IF;
    
    -- Update current parties (if applicable)
    IF(pPartyUserInfo->'currentparties') IS NOT NULL THEN 
	    INSERT INTO $APP_NAME$.Contract_Party (ContractId, PartyUserId, ContractRole)
		SELECT pContractId AS ContractId, src.PartyUserId, src.ContractRole
		FROM JSONB_TO_RECORDSET(pPartyUserInfo->'currentparties') 
		   AS src (PartyUserId INTEGER, ContractRole CHAR(2))
		INNER JOIN $APP_NAME$Views.Users u ON src.PartyUserId = u.UserId -- Only include users that are already registered
		ON CONFLICT (ContractId, PartyUserId) DO UPDATE SET 
			ContractRole = EXCLUDED.ContractRole
		;
	END IF;
	    	
	-- Return contractId
    RETURN pContractId;
END
$$ LANGUAGE 'plpgsql';
