CREATE OR REPLACE FUNCTION $APP_NAME$Views.SP_DCPGetUserProgram(
    pUserId INTEGER,
    pProgramName VARCHAR(50),
    pSchoolId INTEGER,
    pSchoolYear INTEGER
) 
RETURNS TABLE (
	UserId INTEGER, ProgramName VARCHAR(50), SchoolId INTEGER, SchoolYear SMALLINT, MaxBudget INTEGER, BudgetSpent INTEGER, AvailableBudget INTEGER,
	UploadDirectoryId INTEGER, UploadDirectoryId_gd VARCHAR(256), Details JSONB, SchoolAbbreviation VARCHAR(25), UserDisplayName VARCHAR(250)
) AS $$
BEGIN
	RETURN QUERY
	SELECT 
		up.UserId,
		up.ProgramName,
		up.SchoolId,
		up.SchoolYear,
		up.MaxBudget,
		bg.BudgetSpent,
		up.MaxBudget - COALESCE(bg.BudgetSpent,0) AS AvailableBudget,
		up.UploadDirectoryId,
		f.AlternateFileId, -- Get GD directory id
		up.Details,
		u.SchoolAbbreviation,
		u.UserDisplayName
	FROM $APP_NAME$Views.User_Program up
	LEFT JOIN $APP_NAME$Views.SP_DCPGetUser(pUserId, NULL, NULL, NULL) u ON up.UserId = u.UserId -- Get user info
	LEFT JOIN $APP_NAME$Views.File f ON up.UploadDirectoryId = f.FileId -- Get file info
	LEFT JOIN ( -- Get contract values for teachers
		SELECT src.TeacherUserId, src.SchoolYear, CAST(SUM(ContractValue) AS INTEGER) AS BudgetSpent
		FROM $APP_NAME$Views.SP_DCPGetContractValue(pUserId, NULL, pSchoolYear, pSchoolId) AS src
		GROUP BY src.TeacherUserId, src.SchoolYear
	) bg ON up.UserId = bg.TeacherUserId AND bg.SchoolYear = up.SchoolYear
	WHERE (up.UserId = pUserId OR pUserId IS NULL)
	AND (up.ProgramName = pProgramName OR pProgramName IS NULL)
	AND (up.SchoolYear = pSchoolYear OR pSchoolYear IS NULL)
	AND (up.SchoolId = pSchoolId OR pSchoolId IS NULL)
	;
END;
$$ LANGUAGE 'plpgsql';