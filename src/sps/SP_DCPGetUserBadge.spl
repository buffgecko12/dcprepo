CREATE OR REPLACE FUNCTION $APP_NAME$Views.SP_DCPGetUserBadge(
    pUserId INTEGER,
    pBadgeId INTEGER
)
RETURNS TABLE (
	UserId INTEGER, BadgeId INTEGER, BadgeAchievedTS TIMESTAMP WITH TIME ZONE, ProfilePictureId INTEGER, ProfilePictureFilePath VARCHAR(250), ProfilePictureFileName VARCHAR(250), BadgeLevel CHAR(1), BadgeShortName VARCHAR(50), BadgeDisplayName VARCHAR(100), BadgeDescription VARCHAR(500)
) AS $$
BEGIN
    RETURN QUERY
    SELECT ub.UserId, ub.BadgeId, ub.BadgeAchievedTS, upp.ProfilePictureId, lpp.ProfilePictureFilePath, lpp.ProfilePictureFileName, lb.BadgeLevel, lb.BadgeShortName, lb.BadgeDisplayName, lb.BadgeDescription
    FROM $APP_NAME$Views.User_Badge ub
    INNER JOIN $APP_NAME$Views.Lookup_Badge lb ON ub.BadgeId = lb.BadgeId -- Get badge info
    LEFT JOIN $APP_NAME$Views.User_Profile_Picture upp ON ub.UserId = upp.UserId AND ub.BadgeId = upp.SourceBadgeId -- Lookup any profile pictures associated with badge
    LEFT JOIN $APP_NAME$Views.Lookup_Profile_Picture lpp ON upp.ProfilePictureId = lpp.ProfilePictureId -- Lookup profile picture info
    WHERE (ub.UserId = pUserId OR pUserId IS NULL)
    AND (ub.BadgeId = pBadgeId OR pBadgeId IS NULL)
    ORDER BY ub.UserId, CASE lb.BadgeLevel WHEN 'B' THEN 3 WHEN 'S' THEN 2 WHEN 'G' THEN 1 END, ub.BadgeAchievedTS DESC
    ;
END;
$$ LANGUAGE 'plpgsql';