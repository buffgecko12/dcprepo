CREATE OR REPLACE FUNCTION $APP_NAME$Views.SP_DCPUpsertTeacher (
    pTeacherUserId INTEGER, 
    pMaxBudget INTEGER,
    pClassInfo JSONB
) 
RETURNS VOID AS $$
BEGIN

    -- S1: Update teacher info
    INSERT INTO $APP_NAME$.User_Teacher(TeacherUserId, MaxBudget)
    VALUES(pTeacherUserId, pMaxBudget)
    ON CONFLICT(TeacherUserId) DO UPDATE SET
    	MaxBudget = COALESCE(EXCLUDED.MaxBudget, User_Teacher.MaxBudget) -- Don't overwrite existing values with NULL
    ;
    
    -- S2: Update class info
    IF(pClassInfo IS NOT NULL) THEN

    	--S2a: Delete contract references
    	UPDATE $APP_NAME$.Contract
    	SET TeacherUserId = 0,
    		ClassId = 0
		WHERE TeacherUserId = pTeacherUserId
		AND ClassId IN (
			SELECT CAST (
				JSONB_ARRAY_ELEMENTS_TEXT(pClassInfo->'deletedclasses') AS INTEGER
			)
		)
		;
		
    	-- S2b: Delete classes
		DELETE FROM $APP_NAME$.User_Teacher_Class
		WHERE TeacherUserId = pTeacherUserId
		AND ClassId IN (
			SELECT CAST (
				JSONB_ARRAY_ELEMENTS_TEXT(pClassInfo->'deletedclasses') AS INTEGER
			)
		)
		;    
    
    	-- S2c: Update classes
		INSERT INTO $APP_NAME$.User_Teacher_Class (TeacherUserId, ClassId)
		SELECT pTeacherUserId, src.classid
		FROM JSONB_TO_RECORDSET(pClassInfo->'currentclasses')
		AS src (classid INTEGER)
		ON CONFLICT (TeacherUserId, ClassId) DO NOTHING -- TO-DO: Update this when more fields are added
		;
    END IF;
    
END;
$$ LANGUAGE 'plpgsql';