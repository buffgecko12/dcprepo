CREATE OR REPLACE FUNCTION $APP_NAME$Views.SP_DCPGetUserNotification(
    pUserId INTEGER,
	pSourceEventId INTEGER,
	pNotificationId BIGINT,
	pActiveOnlyFlag BOOLEAN,
	pMaxRows INTEGER
)
RETURNS TABLE (
	UserId INTEGER, NotificationId BIGINT, NotificationSeen BOOLEAN, NotificationTS TIMESTAMP WITH TIME ZONE, NotificationText VARCHAR(500), SourceEventId INTEGER, EventClass CHAR(2)
) AS $$
BEGIN
    RETURN QUERY
    SELECT un.UserId, un.NotificationId, un.NotificationSeen, un.NotificationTS, un.NotificationText, un.SourceEventId, le.EventClass
    FROM $APP_NAME$Views.User_Notification un
    INNER JOIN $APP_NAME$Views.Lookup_Event le ON un.SourceEventId = le.EventId
    WHERE (un.UserId = pUserId OR pUserId IS NULL)
    AND (un.SourceEventId = pSourceEventId OR pSourceEventId IS NULL)
    AND (un.NotificationId = pNotificationId OR pNotificationId IS NULL)
    AND ( -- Show active/inactive notifications, depending on flag
    	(pActiveOnlyFlag AND un.NotificationSeen IS NULL) OR 
    	pActiveOnlyFlag IS NULL OR
    	pActiveOnlyFlag IS FALSE
	)
    ORDER BY un.UserId, un.NotificationSeen DESC, un.NotificationTS
    LIMIT pMaxRows
    ;
END;
$$ LANGUAGE 'plpgsql';