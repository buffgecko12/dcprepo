CREATE OR REPLACE FUNCTION $APP_NAME$Views.SP_DCPManageUserDisplayInfo(
    IN pUserId INTEGER,
	IN pActionType VARCHAR(25),
	IN pNotificationType CHAR(2),
	OUT pReputationValueDelta INTEGER,
	OUT pOpenNotificationsFlag BOOLEAN,
	OUT pProfilePictureFile VARCHAR(600)
) AS $$
BEGIN

	-- Get user display info
	IF(pActionType = 'getuserdisplayinfo') THEN
		SELECT 
			COALESCE(rep.ReputationValueDelta,0), 
			CASE WHEN EXISTS (
				SELECT 1
				FROM $APP_NAME$Views.User_Notification un
				WHERE un.UserId = pUserId
				AND NotificationSeen IS NULL
			) THEN TRUE ELSE FALSE END,
			ProfilePictureFilePath || ProfilePictureFileName 
			INTO pReputationValueDelta, pOpenNotificationsFlag, pProfilePictureFile
		FROM $APP_NAME$Views.Users u
		LEFT JOIN (	-- Calculate reputation point change since last view
			SELECT u.UserId, SUM(ure.PointValue) AS ReputationValueDelta
			FROM $APP_NAME$Views.Users u
			INNER JOIN $APP_NAME$Views.User_Reputation_Event ure ON u.UserId = ure.UserId
			WHERE u.UserId = pUserId
			AND (ure.EventTS > u.ReputationValueLastSeenTS OR u.ReputationValueLastSeenTS IS NULL) -- Only get events that occurred after user last viewed reputation info
			GROUP BY u.UserId
		) rep ON u.UserId = rep.UserId
		LEFT JOIN $APP_NAME$Views.Lookup_Profile_Picture lbp ON u.ProfilePictureId = lbp.ProfilePictureId -- Get profile picture info
		WHERE u.UserId = pUserId
		;
	
	-- Reset last reputation view TS
	ELSEIF(pActionType = 'clearusernotifications') THEN

		-- Clear all user notifications
		PERFORM $APP_NAME$Views.SP_DCPClearUserNotification(pUserId, NULL, NULL, pNotificationType);		
		
	-- Reset last view TS and clear relevant notifications
	ELSEIF(pActionType = 'clearnewrepnotification') THEN

		-- Set last viewed TS
		UPDATE $APP_NAME$.Users
		SET ReputationValueLastSeenTS = CURRENT_TIMESTAMP
		WHERE UserId = pUserId
		;

		-- Clear any "new reputation point" notifications
		PERFORM $APP_NAME$Views.SP_DCPClearUserNotification(pUserId, 1001, NULL, NULL);		
		
	-- Reset last view TS and clear relevant notifications
	ELSEIF(pActionType = 'acceptdatausepolicy') THEN

		-- Set last viewed TS
		UPDATE $APP_NAME$.Users
		SET DataUsePolicyAcceptedTS = CURRENT_TIMESTAMP
		WHERE UserId = pUserId
		;

	END IF;
END;
$$ LANGUAGE 'plpgsql';